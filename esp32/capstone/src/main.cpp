#include <Arduino.h>
#include <FastLED.h>
#include <FreeRTOS.h>
#include "soc/rtc_wdt.h"

#include "esp32-hal-spi.h"
#include "driver/spi_slave.h"

#define DEMO 1 /* Demo displays a preset image */
#define DEBUG

#ifdef DEBUG
#define DEBUG_PRINT(x) Serial.println(x)
#else
#define DEBUG_PRINT(x)
#endif


/* SPI setup. (spi example code from 
https://github.com/espressif/esp-idf/blob/178b122c145c19e94ac896197a3a4a9d379cd618/examples/peripherals/spi_slave/receiver/main/app_main.c)) */
#define GPIO_HANDSHAKE 2
#define GPIO_MOSI 5
#define GPIO_MISO 18
#define GPIO_SCLK 19
#define GPIO_CS 23
#define RCV_HOST    VSPI_HOST
#define DMA_CHAN    2
WORD_ALIGNED_ATTR char g_sendbuf[129]="";
WORD_ALIGNED_ATTR char g_recvbuf[129]="";
spi_slave_transaction_t g_spi_trans;

const int NUM_ANGULAR_SEGMENTS = 120; // 3 degree segments
const int NUM_LEDS = 144; // 144-4
const int NUM_LEDS_ARM = 36; // 140 leds total/4 arms
const int NUM_ARMS = 4;

const int LED_DATA_PIN = 15; //gpio #15
const int LED_CLK_PIN = 14;
const int HES_SIG_PIN = A3; // gpi #34

const float MOTOR_RPM_THRESHOLD = 00.0f; // images won't display while below this threshold

// define a few colors for testing
#define BLUE    CRGB::Blue
#define RED     CRGB::Red
#define GREEN   CRGB::Green

typedef struct ImageFrameData
{
    // array of RGB values for LEDs
    CRGB ledValues[NUM_LEDS_ARM][NUM_ANGULAR_SEGMENTS];
} ImageFrameData;

ImageFrameData *demoImage;

float g_currentRpm;
volatile boolean g_newRotation;

// used for calculating RPM
volatile unsigned int g_revolutions;
unsigned long g_prevTimeMs;
float g_revsPerMs;
float g_timePerSegment_us; // time for arms to rotate through 1 angular segment (3 deg)

portMUX_TYPE hesMux = portMUX_INITIALIZER_UNLOCKED;

// led values array for FastLED
CRGB g_leds[NUM_LEDS];

/* FreeRTOS things */
TaskHandle_t ImageDisplayTask;
TaskHandle_t CommunicationTask;
QueueHandle_t ImageFrameQueue;


void my_post_setup_cb(spi_slave_transaction_t *trans) {
    WRITE_PERI_REG(GPIO_OUT_W1TS_REG, (1<<GPIO_HANDSHAKE));
}

//Called after transaction is sent/received. We use this to set the handshake line low.
void my_post_trans_cb(spi_slave_transaction_t *trans) {
    WRITE_PERI_REG(GPIO_OUT_W1TC_REG, (1<<GPIO_HANDSHAKE));
}


/* Hall effect sensor interrupt service routine */
void IRAM_ATTR HallEffectSensor_ISR()
{
    portENTER_CRITICAL_ISR(&hesMux);
    g_newRotation = true;
    g_revolutions++;
    portEXIT_CRITICAL_ISR(&hesMux);
}


void CalculateRPM()
{
    // do new calculation every 3 revolutions - decrease for improved accuracy
    // DEBUG_PRINT(g_revolutions);
    if (g_revolutions >= 3)
    {
        unsigned long currentTimeMs = millis();

        if (g_prevTimeMs != 0) // dont divide by 0
            g_revsPerMs = g_revolutions/((float)(millis() - g_prevTimeMs));
        g_prevTimeMs = millis();
        g_revolutions = 0;

        g_currentRpm = g_revsPerMs * 60000.0;
        if (g_revsPerMs != 0) // dont divide by zero
        {
            g_timePerSegment_us = ((1/g_revsPerMs) / NUM_ANGULAR_SEGMENTS)*1000.0;
        }
        DEBUG_PRINT("Calculations------");
        DEBUG_PRINT(g_revsPerMs);
        DEBUG_PRINT(g_currentRpm);
        DEBUG_PRINT(g_timePerSegment_us);
        DEBUG_PRINT("------------------");
    }
}

void Task_ImageDisplay(void *parameter)
{
    DEBUG_PRINT("Start Image Display Task");

    ImageFrameData *imageFrame;
#if DEMO
        imageFrame = demoImage;
#endif

    for (;;) // infinite loop
    {
        
#if DEMO == 0
        xQueueReceive(ImageFrameQueue, imageFrame, 4);
#endif

        CalculateRPM(); // update params
        g_newRotation = false;

        if (g_currentRpm >= MOTOR_RPM_THRESHOLD)
            DEBUG_PRINT("***************** NEW ROTATION *****************");
        
        while ((!g_newRotation) && (g_currentRpm >= (float)MOTOR_RPM_THRESHOLD)) // loop for 1 rotation
        {
            // display image on LEDS
            for (int segmentIdx = 0; segmentIdx < NUM_ANGULAR_SEGMENTS; segmentIdx++)
            {
                for (int i = 0; i < NUM_ARMS; i++) // iterate over arms
                {
                    for (int j = 0; j < NUM_LEDS_ARM; j++) // iterate over leds within an arm
                    {
                        int ledIdx = i*NUM_LEDS_ARM + j;
                        int segmentOffset = i*(NUM_ANGULAR_SEGMENTS/NUM_ARMS);
                        CRGB rgbData = imageFrame->ledValues[j][(segmentOffset + segmentIdx) % 120];
                        g_leds[ledIdx] = rgbData;
                    }
                    FastLED.show();
                }
                delayMicroseconds(g_timePerSegment_us);
            }

        }

        rtc_wdt_feed(); // feed watchdog timer
        vTaskDelay(10); // feed task watchdog
    }
}

void SetupSpi()
{
    esp_err_t ret;

    //Configuration for the SPI bus
    spi_bus_config_t buscfg;
    buscfg.mosi_io_num=GPIO_MOSI;
    buscfg.miso_io_num=GPIO_MISO;
    buscfg.sclk_io_num=GPIO_SCLK;
    buscfg.quadwp_io_num = -1;
    buscfg.quadhd_io_num = -1;

    //Configuration for the SPI slave interface
    spi_slave_interface_config_t slvcfg;
    slvcfg.mode = 0;
    slvcfg.spics_io_num=GPIO_CS;
    slvcfg.queue_size = 3;
    slvcfg.flags = 0;
    slvcfg.post_setup_cb = my_post_setup_cb;
    slvcfg.post_trans_cb = my_post_trans_cb;

    //Configuration for the handshake line
    gpio_config_t io_conf;
    io_conf.intr_type=GPIO_INTR_DISABLE;
    io_conf.mode=GPIO_MODE_OUTPUT;
    io_conf.pin_bit_mask=(1<<GPIO_HANDSHAKE);

    //Configure handshake line as output
    gpio_config(&io_conf);
    //Enable pull-ups on SPI lines so we don't detect rogue pulses when no master is connected.
    gpio_set_pull_mode((gpio_num_t)GPIO_MOSI, GPIO_PULLUP_ONLY);
    gpio_set_pull_mode((gpio_num_t)GPIO_SCLK, GPIO_PULLUP_ONLY);
    gpio_set_pull_mode((gpio_num_t)GPIO_CS, GPIO_PULLUP_ONLY);

    //Initialize SPI slave interface
    ret=spi_slave_initialize(RCV_HOST, &buscfg, &slvcfg, DMA_CHAN);
    assert(ret==ESP_OK);

    memset(g_recvbuf, 0, 33);
    memset(&g_spi_trans, 0, sizeof(g_spi_trans));

}

/* Handles receiving image frames from RPI */
void Task_Communication(void *parameter)
{
    for (;;) // infinite loop
    {   
        //Clear receive buffer, set send buffer to something sane
        memset(g_recvbuf, 0xA5, 129);
        sprintf(g_sendbuf, "This is the receiver, sending data.");

        // receive data
        // row data: 1 byte (row ID) + 3 bytes * NUM_ANGULAR_SEGMENTS
        // start msg: x bytes of 0's
        // end msg: x bytes of 1's
        // ACK/NACK: 1 byte (1 bit to indicate ack/nack, 7 bits for row ID)
        // note: row ID might not be necessary to include in ACK/NACK

        //Set up a transaction of 128 bytes to send/receive
        g_spi_trans.length=128*8;
        g_spi_trans.tx_buffer=g_sendbuf;
        g_spi_trans.rx_buffer=g_recvbuf;
        /* This call enables the SPI slave interface to send/receive to the sendbuf and recvbuf. The transaction is
        initialized by the SPI master, however, so it will not actually happen until the master starts a hardware transaction
        by pulling CS low and pulsing the clock etc. In this specific example, we use the handshake line, pulled up by the
        .post_setup_cb callback that is called as soon as a transaction is ready, to let the master know it is free to transfer
        data.
        */
        esp_err_t ret=spi_slave_transmit(RCV_HOST, &g_spi_trans, portMAX_DELAY);

        //spi_slave_transmit does not return until the master has done a transmission, so by here we have sent our data and
        //received data from the master. Print it.
        printf("Received: %s\n", g_recvbuf);




        // send image frama via task queue to image display task 
        


        rtc_wdt_feed(); // feed watchdog timer
        vTaskDelay(10); // feed task watchdog
    }

}


void setup()
{
    g_currentRpm = 0;
    g_newRotation = false;
    g_revolutions = 0;
    g_prevTimeMs = 0; 
    g_revsPerMs = 0;
    g_timePerSegment_us = 0;

    Serial.begin(115200);
    Serial.println("Setting Up...");

#if DEMO
    static ImageFrameData demo = {
        .ledValues = {
            {},
            {},
            {},
            {BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {} 

        }   
    };

    demoImage = &demo;
#endif

    pinMode(HES_SIG_PIN, INPUT);

    // pin image display task to core 0
    xTaskCreatePinnedToCore(Task_ImageDisplay, "ImageDisplayTask", 10000, NULL, 0,
                            &ImageDisplayTask, 0);
    // pin communication task to core 1
    xTaskCreatePinnedToCore(Task_Communication, "CommunicationTask", 10000, NULL, 0,
                            &CommunicationTask, 1);

    // queue for sending image frames between tasks
    ImageFrameQueue = xQueueCreate(3, sizeof(ImageFrameData));
    if (ImageFrameQueue == NULL)
    {
        Serial.println("Error: queue couldn't be created");
        DEBUG_PRINT(sizeof(ImageFrameData));
    }

    attachInterrupt(HES_SIG_PIN, &HallEffectSensor_ISR, FALLING);
    
    FastLED.addLeds<DOTSTAR, LED_DATA_PIN, LED_CLK_PIN, BGR>(g_leds, NUM_LEDS);
    FastLED.setBrightness(100);

    // setup SPI
    SetupSpi();
    

    Serial.println("Setup Finished. Starting Task Scheduler...");
}

void loop()
{
    // Do nothing, rtos tasks should be running
}