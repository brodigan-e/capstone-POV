#include <Arduino.h>
#include <FastLED.h>
#include <FreeRTOS.h>

#define DEMO 1 /* Demo displays a preset image */
#define DEBUG

#ifdef DEBUG
#define DEBUG_PRINT(x) Serial.println(x)
#else
#define DEBUG_PRINT(x)
#endif

const int NUM_ANGULAR_SEGMENTS = 120; // 3 degree segments
const int NUM_LEDS = 140; // 144 - 4
const int NUM_LEDS_ARM = 35; // 140 leds total/4 arms

const int LED_DATA_PIN = 15; //gpio #15
const int HES_SIG_PIN = A2; // gpi #34

const int MOTOR_RPM_THRESHOLD = 100; // images won't display while below this threshold

typedef struct RGBData 
{
    int r;
    int g;
    int b;

    RGBData()
    {
        r = 0;
        g = 0;
        b = 0;
    }

    RGBData(int R, int G, int B)
    {
        r = R;
        g = G;
        b = B;
    }

} RGBData;

// define a few colors for testing
#define BLUE    RGBData(0,0,255)
#define RED     RGBData(255,0,0)
#define GREEN   RGBData(0,255,0)

typedef struct ImageFrameData
{
    // array of RGB values for LEDs
    RGBData ledValues[NUM_LEDS_ARM][NUM_ANGULAR_SEGMENTS];
    // indicates if this frame is different than the previously sent frame
    boolean frameChanged;
     // indicates whether frame is part of animation or not
    boolean animation;
} ImageFrameData;

float g_currentRpm;
volatile boolean g_newRotation;
volatile boolean g_newQuarter;

// used for calculating RPM
volatile unsigned int g_revolutions;
unsigned long g_prevTimeMs;
unsigned int g_revsPerMs;
unsigned long g_timePer90degMs; // time for arms to rotate 90deg
unsigned long g_timePerSegment_us; // time for arms to rotate through 1 angular segment

hw_timer_t *quarter_circle_timer = NULL;

// arm-quarter mappings (should shift every 90deg)
volatile int g_arm_quarter_map[4];

portMUX_TYPE timerMux = portMUX_INITIALIZER_UNLOCKED;
portMUX_TYPE hesMux = portMUX_INITIALIZER_UNLOCKED;

// led values array for FastLED
CRGB g_leds[NUM_LEDS];

/* FreeRTOS things */
TaskHandle_t ImageDisplayTask;
TaskHandle_t CommunicationTask;
QueueHandle_t ImageFrameQueue;


/* Hall effect sensor interrupt service routine */
void IRAM_ATTR HallEffectSensor_ISR()
{
    portENTER_CRITICAL_ISR(&hesMux);
    g_newRotation = true;
    g_revolutions++;
    portEXIT_CRITICAL_ISR(&hesMux);
}

/* ISR for HW timer */
void IRAM_ATTR Timer90Deg_ISR()
{
    portENTER_CRITICAL_ISR(&timerMux);
    for (int i = 0; i < 4; i++)
    {
        if (g_arm_quarter_map[i] == 4)
        {            
            g_arm_quarter_map[i] =0;
        }
        else
        {
            g_arm_quarter_map[i]++;
        } 
    }
    portEXIT_CRITICAL_ISR(&timerMux);
}


void CalculateRPM()
{
    // do new calculation every 5 revolutions - decrease for improved accuracy
    if (g_revolutions >= 5)
    {
        g_revsPerMs = g_revolutions/(millis() - g_prevTimeMs);
        g_prevTimeMs = millis();
        g_revolutions = 0;

        g_currentRpm = g_revsPerMs * 60000;
        g_timePer90degMs = (1/g_revsPerMs) / 4;
        g_timePerSegment_us = ((1/g_revsPerMs) / NUM_ANGULAR_SEGMENTS)*1000;
        DEBUG_PRINT(g_currentRpm);
    }
}


void Set90degTimerInterval(int interval_us)
{
    timerAlarmWrite(quarter_circle_timer, interval_us, true);
}


void Task_ImageDisplay(void *demoImage)
{
    for (;;) // infinite loop
    {
        ImageFrameData *imageFrame;
#if DEMO
        imageFrame = (ImageFrameData*)demoImage;
#else
        xQueueReceive(ImageFrameQueue, imageFrame, 4);
#endif

        CalculateRPM(); // update params
        Set90degTimerInterval(g_timePer90degMs/1000);
        
        while ((!g_newRotation) && (g_currentRpm >= (float)MOTOR_RPM_THRESHOLD))
        {
            DEBUG_PRINT("Start Image Display");
            g_newRotation = false;

            // display image on LEDS
            int segmentIdx = 0;
            while (segmentIdx < NUM_ANGULAR_SEGMENTS)
            {
                DEBUG_PRINT(segmentIdx);
                for (int i = 0; i < 4; i++) // iterate over arms
                {
                    for (int j = 0; j < NUM_LEDS_ARM; j++) // iterate over leds within an arm
                    {
                        int ledIdx = i*NUM_LEDS_ARM + j;
                        int segmentOffset = g_arm_quarter_map[i]*NUM_LEDS_ARM;
                        RGBData rgbData = imageFrame->ledValues[i][segmentOffset + segmentIdx];
                        g_leds[ledIdx] = CRGB(rgbData.r, rgbData.g, rgbData.b);
                    }
                    FastLED.show();
                }
                delayMicroseconds(g_timePerSegment_us);
                segmentIdx++;
            }
        }
    }
}


/* Handles receiving image frames from RPI */
void Task_Communication(void *parameter)
{
    for (;;) // infinite loop
    {   
        // receive data over SPI->create ImageFrameData

        // queue send
    }
}


void setup()
{
    g_currentRpm = 0;
    g_newRotation = false;
    g_newQuarter = false;
    g_revolutions = 0;
    g_prevTimeMs = 0;
    g_revsPerMs = 0;
    g_timePer90degMs = 0;
    g_timePerSegment_us = 0;

    g_arm_quarter_map[0] = 0;
    g_arm_quarter_map[1] = 1;
    g_arm_quarter_map[2] = 2;
    g_arm_quarter_map[3] = 3;

#if DEMO
    ImageFrameData demoImage;
    const RGBData pixels[NUM_LEDS_ARM][NUM_ANGULAR_SEGMENTS] = {
        {},
        {},
        {BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN},
        {},
        {},
        {BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN},
        {BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN},
        {},
        {},
        {},
        {},
        {},
        {} 
    };

    memcpy(&demoImage.ledValues, &pixels, sizeof(pixels));
    demoImage.frameChanged = 0;
    demoImage.animation = 0;
#endif

    pinMode(HES_SIG_PIN, INPUT);

    Serial.begin(115200);

    // pin image display task to core 0
    xTaskCreatePinnedToCore(Task_ImageDisplay, "ImageDisplayTask", 10000, (void*)&demoImage, 0,
                            &ImageDisplayTask, 0);
    // pin communication task to core 1
    xTaskCreatePinnedToCore(Task_Communication, "CommunicationTask", 10000, NULL, 0,
                            &CommunicationTask, 0);

    // queue for sending image frames between tasks
    ImageFrameQueue = xQueueCreate(5, sizeof(ImageFrameData));
    if (ImageFrameQueue == NULL)
    {
        Serial.println("Error: queue couldn't be created");
    }

    attachInterrupt(HES_SIG_PIN, &HallEffectSensor_ISR, RISING);

    quarter_circle_timer = timerBegin(0, 80, true);
    timerAttachInterrupt(quarter_circle_timer, &Timer90Deg_ISR, true);
    timerAlarmEnable(quarter_circle_timer);

    FastLED.addLeds<NEOPIXEL, LED_DATA_PIN>(g_leds, NUM_LEDS);
    FastLED.setBrightness(100);

    DEBUG_PRINT("Setup Finished. Starting Task Scheduler...");
    vTaskStartScheduler(); // start FreeRTOS task scheduler
}

void loop()
{
    // Do nothing, rtos tasks should be running
}