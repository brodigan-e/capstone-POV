#include <Arduino.h>
#include <FastLED.h>
#include <FreeRTOS.h>
#include "soc/rtc_wdt.h"

#define DEMO 1 /* Demo displays a preset image */
#define DEBUG

#ifdef DEBUG
#define DEBUG_PRINT(x) Serial.println(x)
#else
#define DEBUG_PRINT(x)
#endif

const int NUM_ANGULAR_SEGMENTS = 120; // 3 degree segments
const int NUM_LEDS = 140; // 144-4
const int NUM_LEDS_ARM = 35; // 140 leds total/4 arms

const int LED_DATA_PIN = 15; //gpio #15
const int LED_CLK_PIN = 14;
const int HES_SIG_PIN = A2; // gpi #34

const float MOTOR_RPM_THRESHOLD = 00.0f; // images won't display while below this threshold

// define a few colors for testing
#define BLUE    CRGB::Blue
#define RED     CRGB::Red
#define GREEN   CRGB::Green

typedef struct ImageFrameData
{
    // array of RGB values for LEDs
    CRGB ledValues[NUM_LEDS_ARM][NUM_ANGULAR_SEGMENTS];
} ImageFrameData;

ImageFrameData *demoImage;

float g_currentRpm;
volatile boolean g_newRotation;

// used for calculating RPM
volatile unsigned int g_revolutions;
unsigned long g_prevTimeMs;
float g_revsPerMs;
float g_timePerSegment_us; // time for arms to rotate through 1 angular segment (3 deg)

portMUX_TYPE hesMux = portMUX_INITIALIZER_UNLOCKED;

// led values array for FastLED
CRGB g_leds[NUM_LEDS];

/* FreeRTOS things */
TaskHandle_t ImageDisplayTask;
TaskHandle_t CommunicationTask;
QueueHandle_t ImageFrameQueue;


/* Hall effect sensor interrupt service routine */
void IRAM_ATTR HallEffectSensor_ISR()
{
    portENTER_CRITICAL_ISR(&hesMux);
    g_newRotation = true;
    g_revolutions++;
    portEXIT_CRITICAL_ISR(&hesMux);
}


void CalculateRPM()
{
    // do new calculation every 3 revolutions - decrease for improved accuracy
    if (g_revolutions >= 3)
    {
        unsigned long currentTimeMs = millis();

        if (g_prevTimeMs != 0) // dont divide by 0
            g_revsPerMs = g_revolutions/((float)(currentTimeMs - g_prevTimeMs));
        g_prevTimeMs = currentTimeMs;
        g_revolutions = 0;

        g_currentRpm = g_revsPerMs * 60000;
        if (g_revsPerMs != 0) // dont divide by zero
        {
            g_timePerSegment_us = ((1/g_revsPerMs) / NUM_ANGULAR_SEGMENTS)*1000;
        }
        DEBUG_PRINT("Calculations------");
        DEBUG_PRINT(g_currentRpm);
        DEBUG_PRINT(g_timePerSegment_us);
        DEBUG_PRINT("------------------");
    }
}

void Task_ImageDisplay(void *parameter)
{
    DEBUG_PRINT("Start Image Display Task");

    ImageFrameData *imageFrame;
#if DEMO
        imageFrame = demoImage;
#endif

    for (;;) // infinite loop
    {
        
#if DEMO == 0
        xQueueReceive(ImageFrameQueue, imageFrame, 4);
#endif

        CalculateRPM(); // update params
        g_newRotation = false;

        if (g_currentRpm >= MOTOR_RPM_THRESHOLD)
            DEBUG_PRINT("***************** NEW ROTATION *****************");
        
        while ((!g_newRotation) && (g_currentRpm >= (float)MOTOR_RPM_THRESHOLD)) // loop for 1 rotation
        {
            // display image on LEDS
            for (int segmentIdx = 0; segmentIdx < NUM_ANGULAR_SEGMENTS; segmentIdx++)
            {
                for (int i = 0; i < 4; i++) // iterate over arms
                {
                    for (int j = 0; j < NUM_LEDS_ARM; j++) // iterate over leds within an arm
                    {
                        int ledIdx = i*NUM_LEDS_ARM + j;
                        int segmentOffset = i*(NUM_ANGULAR_SEGMENTS/4);
                        CRGB rgbData = imageFrame->ledValues[j][(segmentOffset + segmentIdx) % 120];
                        g_leds[ledIdx] = rgbData;
                    }
                    FastLED.show();
                }
                delayMicroseconds(g_timePerSegment_us);
            }

        }

        rtc_wdt_feed(); // feed watchdog timer
        vTaskDelay(10); // feed task watchdog
    }
}


/* Handles receiving image frames from RPI */
void Task_Communication(void *parameter)
{
    // for (;;) // infinite loop
    // {   
    //     // receive data

    //     // queue send 
    // }

}


void setup()
{
    g_currentRpm = 0;
    g_newRotation = false;
    g_revolutions = 0;
    g_prevTimeMs = 0; 
    g_revsPerMs = 0;
    g_timePerSegment_us = 0;

    Serial.begin(115200);
    Serial.println("Setting Up...");

#if DEMO
    static ImageFrameData demo = {
        .ledValues = {
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, RED, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN, GREEN},
            {},
            {},
            {},
            {},
            {} 
        }
    };

    // memcpy(&demo.ledValues, &pixels, sizeof(pixels));
    demoImage = &demo;
#endif

    pinMode(HES_SIG_PIN, INPUT);

    // pin image display task to core 0
    xTaskCreatePinnedToCore(Task_ImageDisplay, "ImageDisplayTask", 10000, NULL, 0,
                            &ImageDisplayTask, 0);
    // pin communication task to core 1
    xTaskCreatePinnedToCore(Task_Communication, "CommunicationTask", 10000, NULL, 0,
                            &CommunicationTask, 1);

    // queue for sending image frames between tasks
    ImageFrameQueue = xQueueCreate(3, sizeof(ImageFrameData));
    if (ImageFrameQueue == NULL)
    {
        Serial.println("Error: queue couldn't be created");
        DEBUG_PRINT(sizeof(ImageFrameData));
    }

    attachInterrupt(HES_SIG_PIN, &HallEffectSensor_ISR, FALLING);
    
    // FastLED.addLeds<NEOPIXEL, LED_DATA_PIN>(g_leds, NUM_LEDS);
    FastLED.addLeds<DOTSTAR, LED_DATA_PIN, LED_CLK_PIN, BGR>(g_leds, NUM_LEDS);
    FastLED.setBrightness(100);

    Serial.println("Setup Finished. Starting Task Scheduler...");
}

void loop()
{
    // Do nothing, rtos tasks should be running
}